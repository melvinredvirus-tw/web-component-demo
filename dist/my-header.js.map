{"version":3,"file":"my-header.js","sourceRoot":"","sources":["../src/my-header.ts"],"names":[],"mappings":";;;;;;AAAA,OAAO,EAAC,UAAU,EAAE,IAAI,EAAE,GAAG,EAAC,MAAM,KAAK,CAAC;AAC1C,OAAO,EAAC,aAAa,EAAE,QAAQ,EAAC,MAAM,mBAAmB,CAAC;AAGnD,IAAM,QAAQ,GAAd,MAAM,QAAS,SAAQ,UAAU;IAAjC;;QAiBL,SAAI,GAAG,QAAQ,CAAC;IAUlB,CAAC;IARU,MAAM;QACb,OAAO,IAAI,CAAA;;cAED,IAAI,CAAC,IAAI;;;KAGlB,CAAC;IACJ,CAAC;;AAzBe,eAAM,GAAG,GAAG,CAAA;;;;;;;;;;;;;GAa3B,AAbqB,CAapB;AAGF;IADC,QAAQ,EAAE;sCACK;AAjBL,QAAQ;IADpB,aAAa,CAAC,WAAW,CAAC;GACd,QAAQ,CA2BpB","sourcesContent":["import {LitElement, html, css} from 'lit';\nimport {customElement, property} from 'lit/decorators.js';\n\n@customElement('my-header')\nexport class MyHeader extends LitElement {\n  static override styles = css`\n    header {\n      display: block;\n      background: #1976d2;\n      color: white;\n      padding: 16px;\n      font-size: 1.5rem;\n      font-weight: bold;\n      display: flex;\n      justify-content: space-between;\n      align-items: center;\n      letter-spacing: 1px;\n    }\n  `;\n\n  @property()\n  name = 'Header';\n\n  override render() {\n    return html`\n      <header class=\"header\">\n        <h1>${this.name}</h1>\n        <h1>Cart</h1>\n      </header>\n    `;\n  }\n}\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    'my-header': MyHeader;\n  }\n}\n"]}